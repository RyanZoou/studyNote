mysql+nginx(apache)+php
                        html知识点

                     URI 统一资源标识符，描述一个网络上的资源，是一个绝对路径，如客户端访问一个网址，这个网站在服 务器端的绝对路径 包括 iP地址、端口号、网站的路径 Ip:端口号/网站路径
                     URL 统一资源定位器 ，是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，比如网址
1、TCP/IP:是一种传输层协议，规定了主机之间如何链接，数据如何传送，基于二进制数据。
       IP：唯一标识电脑的一个地址

2、HTTP（超文本传输协议）：
   应用层协议，基于纯文本，规定了通信双方，要遵守怎么样的文本格式，来传递信息。

原理：
   （1）HTTP客户端程序（进行请求发送）先与服务器建立tcp连接
  ?（2）HTTP客户端程序建立Http请求头（报头），请求正文（报文）。
   （3）发送请求（Request）
   （4）HTTP服务器程序接受请求
   （5）HTTP服务器程序处理请求
   （6）服务器发送响应（Response：分为响应报头，响应正文）
    (7) HTTP客户端接受响应
    (8)TCP链接断开
    ！！！特征：
         （1）无状态性：服务器与客户端之间不会主动维持互相的状态的信息
          (2)非长连接，请求响应（往返的过程）结束之后，链接断开

3、超文本标记语言----html

HTML 与 XML 区别 ：XML是用来描述数据，传输和存储数据 ，HTML 是用来显示数据

4、什么是万维网（www）？ （World Wide Web）
       基于http协议，超文本标记，构建全球性的信息网络，简称web

5、http协议报文
   （1）请求（Request）
          a.method(请求方式)：
            get:用来获取资源，如果通过该方式发送信息，通过查询字符串的方式，发送的数据最多只能为255个字节（主要特征是：效率，速度快。）请求数据作为url的查询字符串发送
          post:把要提交到服务器的数据打包到请求正文当中发送（有请求正文）请求数据在请求正文发送
          put，delete......

     b.资源-----URL（统一资源定位器 Uniform Resource Locator）,URI（提供统一资源标识符）
               协议://http/path/sub/indentity?id=1&name=jack
               例：
                 GET    http://192.168.1.38:80/contact/friends
                 POST   http://192.168.1.38:80/contact/friends                


     c.Content-Type:报文正文的数据格式以及字符集编码
         html表单使用的请求正文格式 application/x-www-form-urlencoded
         text/json
         {id:1,name:limi,tel:1123213}
        text/xml
        image/png

      （2）响应  Response
        Cache：设置客户端缓存
        Contenet-Type: 设置响应正文的数据格式与字符编码
        例：网页的Content-Type:text/html;Chartset=utf-8
     
6、Apache httpd  （2.4）
    是一个http应用服务器 （http server）

    以windows服务形式启动apache:
    a.打开cmd
    b. net start windows服务名

7. PHP  (5.5)

课后阅读：

  Facebook 
  Hip Hop Virtual Machine (HHVM)

作业：1. 安装好Apache + PHP
回去研究下：什么是socket自己编写一个协议。（用java写一个服务器端。（用c或者java）自己写一个http）
                
必备工具：
   1. Sublime Text
   2. Google Chrome
   3. FireFox
   4. IE Tester

必备参考：
    www.w3school.com.cn

html-----超文本标记语言

1、文档流
     默认从左到右排版
     
《-------------------------基本元素----------------------------》

2、基本元素
     （1）标题:<h1>~<h6> 块级元素
     （2）段落：<p></p>头尾换行 块级元素
     （3）图片：(img)  <img src="图片路径"/（../）表示向上一级  alt(图片提示) align（居于什么位置：center、right、left）> 
      (4)超链接:<a></a>  建立到其他页面的连接。  不是块级元素
              href：超链接地址
              target：指定打开新页面的目标
              _blank 新标签或新窗口打开
              _self  在当前标签或当前窗口打开
              锚记链接：在指定的链接中设置<a href="#paomao1">第一章</a>
              跳转到指定地方<a name="paomao1">点击上面链接跳转到这里</a>
      (5)<pre>  里面的内容怎么布局就怎么样显示出来（pre）元素实际的作用就是编辑器怎么排版的，原封不动的展现出来。当然这种只适合简单的排版，复杂的排版就无法满足要求了。
      (6)<mark>黄色的背景，黑色的字</mark>   不是块级元素
     （7）强制换行<br/>安全换行<wbr>
     （8)<span><span>结合css 
      (9)<blockquote></blockquote> (大的段落)
     <dl><dt><dd>生成说明列表
  例如：
     <dl>
        <dt>这是一份文件</dt>
        <dd>这里是这份文件详细内容1</dd>
        <dd>这里是这份文件详细内容2</dd>
     <dl>
解释：这三个元素是一个整体，但<dt><dd>并非都必须出现
下面的标签是这对上面<dl><dt><dd>的改进，是html5的内容
例如：
    <figure> 独立的流内容
      <figcaption>这是一张图片</figcaption>
      <img src="img.png">
    </figure>
3. 内联（行内）元素与块级元素
    (1). 内联元素不会自动断行，文档流从左到右
    (2). 块级元素文档流 从上到下，宽度默认与容器同宽 

4、列表：块级元素
   有序列表:<ol start=“1”表示从第一个开始></ol>  里面必须要结合列表项来使用<li></li>
   无序列表：<ul><ul>  里面必须要结合列表项来使用<li></li>

《-----------------------表格--------------------------------》

5、表格：
   （1）<table></table>表格
   （2）<tr></tr> 行
   （3）<td></td> 列
    (4) <th></th> 表头
    属性：cellpadding  单元格填充    (内容到边框的距离)
          cellspacing  单元格间距   （边框到边框的距离）
          colspan：跨列合并单元格（整数值）
          rowspan: 跨行合并单元格（整数值）
   作用：a、以表格形式
   
《-----------------------表单--------------------------------》   
             
6、表单：Form
   !表单的工作原理：
   a、打包表单数据，读取所有的用户输入的信息，获取name属性，以及把用户输入的信息作为value属性值，enctype属性按照application/x-www-form-urlencoded格式打包：(打包数据提交) 对于上传文件要使用enctype="multipart/form-data"打包数据（使用的是二进制传输数据，来上传文件）
name1=value1&name2=value2...
   b.发送数据，请求服务器
     以何种方式发送，method：
        GET：把打包后的数据文本以查询字符串形式发送，url？name1=valu2&name2=value2....信息长度为255个字节。
        POST:把打包后的数据文本在请求正文中发送。
   c.发送到哪？ action：是一个url，表示处理该表单提交请求的程序或者资源的路径

   （1）表单是接受用户输入一系列的标签，例如文本框，密码框。
   （2）表单的作用：将用户的输入数据提交到服务器端去处理。
   （3）form标签的method属性
   （4）action属性：处理表单数据的服务器端程序
   （5）表单字段
         属性：name提交的参数名称与表单字段的name属性一致
            type 制定表单字段的类型
            value 表单字段的值
   （6）label标签：对表单字段起到解释的作用
          for属性：指向制定的表单字段（字段的id），点击后会使指向的表单项获得焦点（比如点击label标签，对于的文本框会获得焦点）
          <label for="user">用户名：</label>
          <input type="text" id="user" name="user"/>
   （7）单选按钮：input标签，type="radio"  checked=check 默认选中
        注意：id不同，name必须相同，在提交数据时必须知道value的值
        <input type="radio" name="gender"/><label>男</label>
        <input type="radio" name="gender"/><label>女</label>
   （8）复选框：input标签，type="checkbox" <input autofocus 设置焦点>
        一个name对应多个值，一般在服务器是通过数组来获取数据。在php环境下，复选框的name属性要写成数组形式：如
        <input type="checkbox" name="box[]" id="js"/><label for="js">javascript</label>
        <input type="checkbox" name="box[]" id="sql"/><label for="sql">sql</label>
        <input type="checkbox" name="box[]" id="php"/><label for="php">php</label>
   （9）下拉选项框：<select name=""（设定提交时的名称） size="" (设置下拉列表的高度) multiple(设置是否可以多选) require（选择验证，设置后必须选择才能通过）>,例如：<select name="fruit" size="30" multiple></select>
选项：<option value="">
    <label for="str">选择</label>
    <select id="str" name="str">
      <option value="2b"></option>
    </select>
    (10)文本域：<textarea rows="" cols=""></textarea>
   * 课后查阅：副文本框 (百度官方有提供一个副文本框 UEditor)
    (11)文件域 <input type="file" />
    * 图片预览上传，例如头像剪裁上传
    (12)隐藏域
       <input type="hidden" />
    <input type="pwd" id="pwd_again" name="pwd" placeholder="请再次输入密码"/>
    (13)日期列表
    <input type="date">
    (14)数字列表
    <input type="number">
    
《------------------------Framset-------------------------------》
     
7、框架Framset
   框架Frameset
    (1). 作用：把页面按比例划分成不同区域，不同的区域引用其他html页面

    (2).用法：可以嵌套frameset和frame，不能包含在body标签 

    (3). rows 按照水平方向划分区域,cols按垂直方向,值为按逗号分隔的百分百
    (4). frame的作用：表示一个框架集里面的框架
    (5). src: 在当前frame当中呈现的html文件路径
    (6). name: 当前frame的名称，为了其他链接能够找到该frame
<html>
    <head>
        <meta charset="utf-8">
    </head>
    <frameset rows="20%,80%">
      <frame name="top" src="top.html"></frame>
      <frameset cols="20%,80%">
        <frame name="left" src="left.html"></frame>
        <frame name="right"></frame>
      </frameset>
    </frameset>
</html>
   iframe：类似于frame标签，但是不用包含于frameset中
/* <em></em>是CSS语言中的一种样式。被加了这样标签的字体会变成斜体。*/

《-----------------------------文档元素--------------------------》

文档元素
1、<header>表示首部 解释：主要是设置页面的标头部分
  <header>
    这里部分一般是页面的头部，包括：LOGO、标题、导航等
  </header>
2、<footer>表示尾部 解释：主要是设置页面的尾部
  <footer>
    这里是页面的尾部，一般包括：版权的声明、友情链接等
  </footer>
3、<hgroup>组合标题（下面把h1和h4结合在一起）
  <hgroup>
     <h1>这是一个大标题<h1/>
     <h4>这里是一个副标题<h4/>
  </hgroup>
4、<section>文档的主题部分
<section>
   这里一般是存放文档的主题内容。
</section>
解释：<section>元素的作用是定义一个文档的主题内容。
5、<nav>添加导航
<nav>
  <nav>
   这里是存放文档的导航。
  </nav>
解释：<nav>给文档页面添加一个导航。
6、<article>添加一个独立成篇的文档(类似body)
<article>
   <header>
    <nav></nav>
    </header>
    <section></section>
    <footer></footer>
</article>
解释：<article>元素表示独立成篇的文档，里面可以包括头、尾、主题等一系列内容。
在比较大的页面中会使用到，比如一片博文的列表，每篇博文，都有自己的头、尾、主题等内容。和此相似的还有论坛的帖子、用户的评论、新闻等。
7、<aside>生成注释栏
   <aside>
   这是一个注释。
   </aside>
8、<address>表示文档或article元素的联系信息
  <address>
    联系信息
  </address>
解释：如果是在<body>元素下时，表示整个文档的联系信息，如果是在<article>元素下时，表示其下的联系信息。
9、tabindex 属性规定元素的 tab 键控制次序（当 tab 键用于导航时）。
  <element tabindex="number">

《-------------------------（表单的详细理解）-------------------------------》

1、<label>添加说明标签
例如1：<label for="user">用户名：</label> <input id="user" name="user">
例如2：<label for="user">用户名：<input id="user" name="user"></label> 
解释：<label>元素可以关联input，让用户体验更好。且更容易设置css样式。
2、<fieldset>对表单进行编组
<fieldset>.....</fieldset>
解释：元素可以将一些表单元素组织在一起，形成一个整体。
3、<legend>添加分组说明标签
<fieldset>
   <legend>注册表单<legend>
</fieldset>
4、<button>添加按钮
<button type="submit" value="提交"></button> 可以直接用<input type="submit" value="提交"/>
注意 ：input::-webkit-input-placeholder 兼容火狐这个是对input里面的placeholder属性字体修改颜色！
<button type="reset" value="重置(表单)"></button>  
<button type="button" value="按钮"(要与js一起用才有意义)></button>
全局属性和其他
常用的(&nbsp;)空格
(&copy;)版权
relstylesheet

2一、web标准化                     
 （1）内容与样式，行为分离
 （2）html用来定义内容，以及内容的结构
  xhtml标准
a.xhtml 必须强制指定文档类型 DocType HTML <!DOCTYPE html>
b.xhtml 所有标签必须闭合（要有一个相应的结束标签）,html比较随意
c.xhtml 严格区分大小写,所有标签的元素和属性的名字都必须使用小写
d.xhtml 规定所有属性都必须有一个值，没有值的就重复本身
e.xhtml5是xhtml升级版，文档中只使用语义化标签，放弃样式相关的标签
 （3）以css来定义页面的样式
 （4）javascript定义交互行为，以及前端的业务逻辑
  html+css+js

《----------------------------CSS----------------------------》

二、css(级联样式)
  1.css的写法 （cascading style sheet）
   选择器{属性1：属性值1；属性2：属性值2；......}
  2.样式表的引用
   (1)行内样式：html元素添加style属性（优先级：1）
    例如：<h2 style="color:#ff0000">Hello World！</h2>
    when:某个元素需要定义特别样式的使用
   (2)内联样式：页面中添加<style>标签（优先级：2）
    例如：<style type="text/css">
      h2 {
        color:#ffff00;
      }
    </style>
    when:只针对当前的一个页面定义特殊样式
    (3)外部样式表：<link rel="stylesheet" type="text/css" href="路径"/>(优先级：3)
     when:对多个页面的共性样式定义


三、选择器
  （1）标签选择器（优先级：3）
      对当前页面所有的指定的标签应用样式
   例如：在body标签中：<h2>Hello World！</h2> 
         在head标签中：<style type="text/css">
                       h2 { 
                       color:#ffff00;
                       font-size: 30px;
                       } </style>
  （2）类选择器 .（优先级：2）
       对于指定了特定类的多个元素应用标签
    例如：在body标签中：<h3 class="Mode">类选择器的的使用</h3>
          在head标签中：<style type="text/css">
                    .Mode {
                       color:#0000ff;
                       font-size: 30px;
                          }</style>
  （3）id选择器 #（优先级：1）
       对于指定id的单个元素应用样式
       例如：在body标签中：<h3 id="hrw">类选择器的的使用</h3>
             在head标签中：<style type="text/css">
                           #hrw {
                           color:#00ff00;
                            }</style>
  （4）选择子元素
       多个选择权之间用空格，并且有包含关系
  （5）分组选择器
       多个选择器直接用，隔开


四、属性与属性值
   （1）常用尺寸单位
     a.em相对于元素内当前文本大小的倍数，通常用于行高
     b.pt 1pt=1/72 英寸
     c.px 最常用
     d.百分比
    (2)文本属性
      a.text-indent ： 文本缩进，所有元素的第一行都可以缩进一个给定的长度，甚至该长度可以是负值。
      b.text-align：center left right justify（两端对齐） 内容水平对齐方式
      c.word-spacing 英文单词间距
      d.letter-spacing 字符间距 line-height 行高，可以定义字符上下间距
      e.text-decoration:none 文本修饰,underline 会对元素加下划线，就像 HTML 中的 u 元素一样。overline 的作用恰好相反，会在文本的顶端画一个上划线。值 line-through 则在文本中间画一个贯穿线，等价于 HTML 中的 S 和 strike 元素。blink 会让文本闪烁，类似于 Netscape 支持的颇招非议的 blink 标记。
      f. color 字体颜色
      g. font-size 字体大小
      h. font-family 字体 例如："微软雅黑" "microsoft yahei" sans-serif
      i. word-spacing:px 属性可以改变字（单词）之间的标准间隔
      j.text-transform 属性处理文本的大小写,默认值 none 对文本不做任何改动，将使用源文档中的原有大小写。顾名思义，uppercase 和 lowercase 将文本转换为全大写和全小写字符。最后，capitalize 只对每个单词的首字母大写。
    (3)背景属性
      a.background-color:背景颜色
      b.background-image：url(路径)背景图片
        以上可以简写成background
      c.background-size:背景尺寸，auto（默认值，图像以本尺寸显示）cover（等比例缩放图像，使图像至少覆盖容器，但有可能超出容器），contain（等比例缩放图像，使其宽度、高度中较大者与容器横向或者纵向重合）
      d.background-repeat：repeat-x 和 repeat-y 分别导致图像只在水平或垂直方向上重复，no-repeat 则不允许图像在任何方向上平铺。
      e.background-position:上，下，左，右可以使用一些关键字：top、bottom、left、right 和 center
        背景位置，坐标原点是左上角
      f.background-attachement（如果文档比较长，那么当文档向下滚动时，背景图像也会随之滚动。当文档滚动到超过图像的位置时，图像就会消失。您可以通过 background-attachment 属性防止这种滚动）
        背景随页面滚动的方式，scroll（滚动） fixed（固定）
      g.background-color:transparent;透明色
简写形式：background:red url(img.png) no-repeat scrool top left /100% border-box content-box
      可以省略写成 background:url(..) position no-repeat size..;注意positon（位置）在size（大小）前面
    (5)伪类:根据元素不同的状态定义相应的样式
    cursor:pointer;光标样式
    a:link {color:#FF0000;}     /* 未被访问的链接 */
    a:visited {color:#00FF00;}  /* 已被访问的链接 */
    a:hover {color:#FF00FF;}    /* 鼠标指针移动到链接上 */
    a:active {color:#0000FF;}   /* 正在被点击的链接 */
a:hover 必须位于 a:link 和 a:visited 之后 
a:active 必须位于 a:hover 之后
顺序： a:link a:visited a:hover  a:active
After:是一个在使用它的元素后面定义内容
p:after {content:url(/i/w3school_logo_white.gif)}
在P标签后面插入内容

p:first-child {text-transform:uppercase;} 选择器用于选取属于其父元素的首个p子元素的指定选择器。


p:first-child i {text-transform:uppercase;}
 选择器用于选取属于其父元素的首个p子元素的指定选择器里面的i标签定义元素。

p:nth-child(2)
{
background:#ff0000;
}
<h1>这是标题</h1>
<p>第一个段落。</p>//背景为红色
<p>第二个段落。</p>
<p>第三个段落。</p>
<p>第四个段落。</p>
规定属于其父元素的第二个子元素的 p 的背景色

下标是 3 的倍数的所有 p 元素的背景色
p:nth-child(3n+0)
{
background:#ff0000;
}
<h1>这是标题</h1>
<p>第一个段落。</p>
<p>第二个段落。</p>//背景红色
<p>第三个段落。</p>
<p>第四个段落。</p>
<p>第五个段落。</p>//背景红色
<p>第六个段落。</p>



五.盒子模型（只对块元素起作用） (block, inline-block)
  
提示：display属性可以调整元素为行内，块级或行内块级
  
w3c盒子模型的content不包含边框和padding也就是width=定义的宽+padding*2+margin*2
  
(1)content (width,height)
  
(2)border border-ardius(圆角半径) box-shadow:1px 2px color 阴影 box-shadow(x,y,阴影的扩展像素,颜色)当xy为0时，想4个边框扩展效果，否则只有沿着右边框和底部边框扩展阴影的效果
  
(3)padding:上 右 下 左 顺时针（内边距）内容填充，边框与内容的填充（距离）
  
(4)margin 上 右 下 左 顺时针（外边距）边框与边框间距

  注意：外边距合并，当相邻的元素都具备非零的magin属性时，以最大的一个为准
(5) outline （部分元素）

  *
(6) display: (inline, block 块, inline-block) display属性可以调整元素为行内，块级或行内块级
  



六.定位（好好回去理解下）与层叠
  
(1).绝对定位
   a.绝对定位的元素，相对于静态（属于position:static）容器在前，对于绝对位置的它不会占位置，但前面静态容器会占位置，所以排在静态容器下面位置；如果相对于静态（属于position:static）容器在后面，它在前面则对于它自己不占空间所以上浮；相对于在绝对位置的容器前面，它本身自己也属于绝对位置，这样的话前面容器视其自己不占空间，它也不占空间，但它会位于前面容器的上面位置，以此类推。///不受文档流的影响，也就是说脱离文档流（所谓的脱离文档流就是本身这个元素在文档是占位的，如果脱离了，就不占有文档的位置，好像浮在了空中一般有了层次感。）也不会影响其他相邻的元素（相邻元素视其不存在!!!）。    
   b.top,left属性，相对于非静态（不属于position:static）容器左上角为坐标原点偏移

   总而言之就是：脱离文档流，视其自己不占空间，但它会找相对于非静态的容器作为相对的位置
 
(2).相对定位
      
   a.top,left属性,相对于元素本来应该出现的位置偏移,不受其他绝对位置,静态位置的影响，在自己原来的位置

   总而言之就是：相对于自己原来的位置进行偏移，不受其绝对位置和静态位置影响
  
（对于定位而言，只有父类采取了相对定位的设置，子类才能很好地使用绝对定位的设置
另外关于背景的定位 ，使用元素background-position:top left;
相对定位
定位元素是相对于原来没设置过的普通流的元素时来定位的，是相对于排在他之前的子元素而言的
绝对定位的子元素的位置是相对于父级元素的初始位置而言的，跟其他的子元素没有关系
标准模式是相对于html父级元素来说的
另外，绝对定位时，如果父级元素中添加一个相对定位position：relative那么在设置子元素的绝对定位时，子元素就已此为开始设置的参照位置（参照物）
另外对于position定位元素，绝对定位方式有两种absolute
生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。
元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定。
fixed 生成绝对定位的元素，相对于浏览器窗口进行定位。
元素的位置通过 "left", "top", "right" 以及 "bottom" 属性进行规定）
(3).z-index属性:控制层叠


    z-index： 只在绝对定位（absolute）和相对定位（relative）
时才有用

七.浮动 float
  
(1)浮动的块级元素会脱离默认的文档流,对于定义了浮动的层，它会向上浮动
 相对于两个层都浮动的话他们会横向排列
  
(2)清除浮动
  clear（去除的是受到的是影响他上面或者周围的影响，不是去掉自己本身的影响）
如果要使用浮动让块级元素横向排列，一定要加确定宽度的容器

 clear:both 不受浮动影响 

* 
书写样式的思路，规范：
  
1.把页面结构看成盒子套盒子，各种盒子模型的集合
  
2.从外到内（整体到细节），从上到下，从左到右
 

扁平化设计（）



border:10px solid gree;完整的框
border-top:10px solid red;只有上面有边框
border-radius:10px 圆角边框
border-top-left：10px 左上角的边框变圆
(bootstrap)

《--------------------------CSS3-------------------------》

一、css3表格
1、border-collapse:collapse
    separate:默认值，单元格边框独立
    collapse:单元格相邻边框被合并
2、border-spacing:10px
解释：这个要在border-collapse:separate：的状态下才有用，因为要设置间距，不能合并。
3、caption-side：设置标题
  top：默认值，标题在上方
  bottom：标题在在下面
4、empty-cell
  show 默认值，显示边框
  hide 不显示边框
5、table-layout
  auto 默认值，内容过长时，拉伸整个单元格
  fixed 内容过长时，不拉伸整个单元格
6、css3提供了一个属性opacity，可以设置元素的透明度
opacity 0~1 设置元素的透明度
例如：
   p
  {
   color：red；
   opacity：0.5；
  }
7.text-overflow: ellipsis; 
  overflow:hidden
设置 在表格的td中 ，当宽度一定时候,里面的文字隐藏然后显示为“。。。”三个点
二、css3渐变效果
1、线性渐变
2、径向渐变
(是否需要添加前缀查看这个链接)http://caniuse.com
3、测试工具https://gsnedders.html5.org/outliner/
www.bootcss.com
空格：嵌套 
，：并列 
a.btn